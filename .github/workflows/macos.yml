# Copyright (c) 2021-2023, [Ribose Inc](https://www.ribose.com).
# All rights reserved.
# This file is a part of tamatebako
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# The purpose of this workflow is to check that build procedures work correctly
# in specific environment. Due to this reason there is no caching. It is done by
# intention. All caching is in upstream projects.
#
# Also this file contains comments that will be useful is dwarfs has to be build
# in different environment, not GHA.
name: MacOS

on:
  schedule:
    - cron: "0 7 * * 6"
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/macos.yml'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - '.github/workflows/*.yml'
      - '!.github/workflows/macos.yml'
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

env:
  CCACHE_FLD: ccache
  CC: clang
  CXX: clang++
  CXXFLAGS: -DTARGET_OS_SIMULATOR=0 -DTARGET_OS_IPHONE=0

jobs:
  build:
    name: ${{ matrix.config.os }} [ XCode ${{ matrix.config.xcode }}, scope ${{ matrix.setup.scope }}, ${{ matrix.config.build_type }} ${{ matrix.config.extra_opts }} ]
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
# macos-12 -- amd64 runner
# macos-14 -- arm64 (M1) runner
# Need XCode 14.3 for std::boyer_moore_horspool_searcher
          - { os: macos-13, xcode: '14.3.1' , build_type: Release, extra_opts: '' }
          - { os: macos-14, xcode: '15.0.1' , build_type: Release, extra_opts: '' }
          - { os: macos-14, xcode: '15.4'   , build_type: Release, extra_opts: '' }
          - { os: macos-13, xcode: '14.3.1' , build_type: Release, extra_opts: '-DOPENSSL_VERSION=1.1' }
          - { os: macos-14, xcode: '15.0.1' , build_type: Release, extra_opts: '-DOPENSSL_VERSION=1.1' }
          - { os: macos-14, xcode: '15.4'   , build_type: Release, extra_opts: '-DOPENSSL_VERSION=1.1' }

#  We are running two configurations:
#   - ALL in order to run regression tests
#   - MKD just to be sure that it build ok
        setup:
          - { scope: 'ALL',  tests: 'ON'  }
          - { scope: 'MKD',  tests: 'OFF' }

    steps:
      - name: Select XCode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.config.xcode }}

# Do brew update and install folly to see if it causes issues
      - name: Install packages
        run: |
          brew install  \
          bison flex gnu-sed bash boost double-conversion jemalloc fmt glog ccache folly

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Get number of CPU cores
        run:  echo "CORES=$(sysctl -n hw.ncpu)" >> $GITHUB_ENV

      - name: Build and test
        uses: ./.github/actions/build-and-test
